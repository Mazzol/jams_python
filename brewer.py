#!/usr/bin/env python
"""
    Define Brewer colormap.

    Provides also routines to print or plot colormaps.

    Definition
    ----------
    Define and get colormap
        def get_brewer(cname=None, names=False, rgb=False, rgb256=False, reverse=False, grey=False, gray=False):
    Register colormap
        def define_brewer(cname='all', reverse=False, grey=False, gray=False):
    Print available colormap names
        def print_brewer(names='all'):
    Plot all colormaps in pdf file
       def plot_brewer(pdffile='brewer_colors.pdf', reverse=False, grey=False, gray=False):


    Input
    -----
    None


    Optional Input
    --------------
    get_brewer
        cname      Name of colormap
        names      Return list of colormap names
                   if 'sequential': return sequential colormap names
                   if 'diverging': return diverging colormap names
                   if 'qualitative': return qualitative colormap names
                   else: return sequential+diverging+qualitative colormap names
        rgb        if True: return RGB value tuple between 0 and 1
        rgb256     if True: return RGB value tuple between 0 and 255
        reverse    if True: reverse colormaps
        grey       if True: return grey equivalent
        gray       Same as grey
    define_brewer
        cname      Colormap to register colormaps (default: 'all')
                   if 'all': registers all sequential+diverging+qualitative colormaps
        reverse    if True: reverse colormaps
        grey       if True: return grey equivalent
        gray       Same as grey
    print_brewer
        names      Print colormap names (default: 'all')
                   if 'sequential': print sequential colormap names
                   if 'diverging': print diverging colormap names
                   if 'qualitative': print qualitative colormap names
                   else: print sequential+diverging+qualitative colormap names
    plot_brewer
        pdffile    Name of pdf file  (default: 'brewer_colors.pdf')
        reverse    if True: reverse colormaps
        grey       if True: return grey equivalent
        gray       Same as grey


    Output
    ------
    matplotlib colormap instance or tuple with RGB values


    References
    ----------
    Colourmaps of http://colorbrewer2.org by Cynthia A. Brewer, Geography, Pennsylvania State University.
    Values copied from
    http://www.personal.psu.edu/cab38/ColorBrewer/ColorBrewer_all_schemes_RGBonly4_withPalette_and_Macro.xls


    Examples
    --------
    # print_brewer('diverging')

    # plot_brewer('brew.pdf')

    # names = get_brewer(names='sequential')

    # cc = get_brewer('RdYlBu11')
    # plt.pcolormesh(np.outer(np.arange(cc.N),np.ones(cc.N)),cmap=cc)

    # cc = get_brewer('Blues4',rgb=True)
    # mark1 = sub.plot(x, y)
    # plt.setp(mark1, linestyle='None', marker='o', markeredgecolor=cc[0], markerfacecolor='None')


    License
    -------
    This file is part of the UFZ Python library.

    The UFZ Python library is free software: you can redistribute it and/or modify
    it under the terms of the GNU Lesser General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    The UFZ Python library is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
    GNU Lesser General Public License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with The UFZ Python library.  If not, see <http://www.gnu.org/licenses/>.

    Copyright 2012 Matthias Cuntz


    History
    -------
    Written, MC, Sep 2012
"""

# Define colormaps

# sequential color maps
ylgn3 = [(247, 252, 185),
         (173, 221, 142),
         (49, 163, 84)]
ylgn4 = [(255, 255, 204),
         (194, 230, 153),
         (120, 198, 121),
         (35, 132, 67)]
ylgn5 = [(255, 255, 204),
         (194, 230, 153),
         (120, 198, 121),
         (49, 163, 84),
         (0, 104, 55)]
ylgn6 = [(255, 255, 204),
         (217, 240, 163),
         (173, 221, 142),
         (120, 198, 121),
         (49, 163, 84),
         (0, 104, 55)]
ylgn7 = [(255, 255, 204),
         (217, 240, 163),
         (173, 221, 142),
         (120, 198, 121),
         (65, 171, 93),
         (35, 132, 67),
         (0, 90, 50)]
ylgn8 = [(255, 255, 229),
         (247, 252, 185),
         (217, 240, 163),
         (173, 221, 142),
         (120, 198, 121),
         (65, 171, 93),
         (35, 132, 67),
         (0, 90, 50)]
ylgn9 = [(255, 255, 229),
         (247, 252, 185),
         (217, 240, 163),
         (173, 221, 142),
         (120, 198, 121),
         (65, 171, 93),
         (35, 132, 67),
         (0, 104, 55),
         (0, 69, 41)]
ylgnbu3 = [(237, 248, 177),
           (127, 205, 187),
           (44, 127, 184)]
ylgnbu4 = [(255, 255, 204),
           (161, 218, 180),
           (65, 182, 196),
           (34, 94, 168)]
ylgnbu5 = [(255, 255, 204),
           (161, 218, 180),
           (65, 182, 196),
           (44, 127, 184),
           (37, 52, 148)]
ylgnbu6 = [(255, 255, 204),
           (199, 233, 180),
           (127, 205, 187),
           (65, 182, 196),
           (44, 127, 184),
           (37, 52, 148)]
ylgnbu7 = [(255, 255, 204),
           (199, 233, 180),
           (127, 205, 187),
           (65, 182, 196),
           (29, 145, 192),
           (34, 94, 168),
           (12, 44, 132)]
ylgnbu8 = [(255, 255, 217),
           (237, 248, 177),
           (199, 233, 180),
           (127, 205, 187),
           (65, 182, 196),
           (29, 145, 192),
           (34, 94, 168),
           (12, 44, 132)]
ylgnbu9 = [(255, 255, 217),
           (237, 248, 177),
           (199, 233, 180),
           (127, 205, 187),
           (65, 182, 196),
           (29, 145, 192),
           (34, 94, 168),
           (37, 52, 148),
           (8, 29, 88)]
gnbu3 = [(224, 243, 219),
         (168, 221, 181),
         (67, 162, 202)]
gnbu4 = [(240, 249, 232),
         (186, 228, 188),
         (123, 204, 196),
         (43, 140, 190)]
gnbu5 = [(240, 249, 232),
         (186, 228, 188),
         (123, 204, 196),
         (67, 162, 202),
         (8, 104, 172)]
gnbu6 = [(240, 249, 232),
         (204, 235, 197),
         (168, 221, 181),
         (123, 204, 196),
         (67, 162, 202),
         (8, 104, 172)]
gnbu7 = [(240, 249, 232),
         (204, 235, 197),
         (168, 221, 181),
         (123, 204, 196),
         (78, 179, 211),
         (43, 140, 190),
         (8, 88, 158)]
gnbu8 = [(247, 252, 240),
         (224, 243, 219),
         (204, 235, 197),
         (168, 221, 181),
         (123, 204, 196),
         (78, 179, 211),
         (43, 140, 190),
         (8, 88, 158)]
gnbu9 = [(247, 252, 240),
         (224, 243, 219),
         (204, 235, 197),
         (168, 221, 181),
         (123, 204, 196),
         (78, 179, 211),
         (43, 140, 190),
         (8, 104, 172),
         (8, 64, 129)]
bugn3 = [(229, 245, 249),
         (153, 216, 201),
         (44, 162, 95)]
bugn4 = [(237, 248, 251),
         (178, 226, 226),
         (102, 194, 164),
         (35, 139, 69)]
bugn5 = [(237, 248, 251),
         (178, 226, 226),
         (102, 194, 164),
         (44, 162, 95),
         (0, 109, 44)]
bugn6 = [(237, 248, 251),
         (204, 236, 230),
         (153, 216, 201),
         (102, 194, 164),
         (44, 162, 95),
         (0, 109, 44)]
bugn7 = [(237, 248, 251),
         (204, 236, 230),
         (153, 216, 201),
         (102, 194, 164),
         (65, 174, 118),
         (35, 139, 69),
         (0, 88, 36)]
bugn8 = [(247, 252, 253),
         (229, 245, 249),
         (204, 236, 230),
         (153, 216, 201),
         (102, 194, 164),
         (65, 174, 118),
         (35, 139, 69),
         (0, 88, 36)]
bugn9 = [(247, 252, 253),
         (229, 245, 249),
         (204, 236, 230),
         (153, 216, 201),
         (102, 194, 164),
         (65, 174, 118),
         (35, 139, 69),
         (0, 109, 44),
         (0, 68, 27)]
pubugn3 = [(236, 226, 240),
           (166, 189, 219),
           (28, 144, 153)]
pubugn4 = [(246, 239, 247),
           (189, 201, 225),
           (103, 169, 207),
           (2, 129, 138)]
pubugn5 = [(246, 239, 247),
           (189, 201, 225),
           (103, 169, 207),
           (28, 144, 153),
           (1, 108, 89)]
pubugn6 = [(246, 239, 247),
           (208, 209, 230),
           (166, 189, 219),
           (103, 169, 207),
           (28, 144, 153),
           (1, 108, 89)]
pubugn7 = [(246, 239, 247),
           (208, 209, 230),
           (166, 189, 219),
           (103, 169, 207),
           (54, 144, 192),
           (2, 129, 138),
           (1, 100, 80)]
pubugn8 = [(255, 247, 251),
           (236, 226, 240),
           (208, 209, 230),
           (166, 189, 219),
           (103, 169, 207),
           (54, 144, 192),
           (2, 129, 138),
           (1, 100, 80)]
pubugn9 = [(255, 247, 251),
           (236, 226, 240),
           (208, 209, 230),
           (166, 189, 219),
           (103, 169, 207),
           (54, 144, 192),
           (2, 129, 138),
           (1, 108, 89),
           (1, 70, 54)]
pubu3 = [(236, 231, 242),
         (166, 189, 219),
         (43, 140, 190)]
pubu4 = [(241, 238, 246),
         (189, 201, 225),
         (116, 169, 207),
         (5, 112, 176)]
pubu5 = [(241, 238, 246),
         (189, 201, 225),
         (116, 169, 207),
         (43, 140, 190),
         (4, 90, 141)]
pubu6 = [(241, 238, 246),
         (208, 209, 230),
         (166, 189, 219),
         (116, 169, 207),
         (43, 140, 190),
         (4, 90, 141)]
pubu7 = [(241, 238, 246),
         (208, 209, 230),
         (166, 189, 219),
         (116, 169, 207),
         (54, 144, 192),
         (5, 112, 176),
         (3, 78, 123)]
pubu8 = [(255, 247, 251),
         (236, 231, 242),
         (208, 209, 230),
         (166, 189, 219),
         (116, 169, 207),
         (54, 144, 192),
         (5, 112, 176),
         (3, 78, 123)]
pubu9 = [(255, 247, 251),
         (236, 231, 242),
         (208, 209, 230),
         (166, 189, 219),
         (116, 169, 207),
         (54, 144, 192),
         (5, 112, 176),
         (4, 90, 141),
         (2, 56, 88)]
bupu3 = [(224, 236, 244),
         (158, 188, 218),
         (136, 86, 167)]
bupu4 = [(237, 248, 251),
         (179, 205, 227),
         (140, 150, 198),
         (136, 65, 157)]
bupu5 = [(237, 248, 251),
         (179, 205, 227),
         (140, 150, 198),
         (136, 86, 167),
         (129, 15, 124)]
bupu6 = [(237, 248, 251),
         (191, 211, 230),
         (158, 188, 218),
         (140, 150, 198),
         (136, 86, 167),
         (129, 15, 124)]
bupu7 = [(237, 248, 251),
         (191, 211, 230),
         (158, 188, 218),
         (140, 150, 198),
         (140, 107, 177),
         (136, 65, 157),
         (110, 1, 107)]
bupu8 = [(247, 252, 253),
         (224, 236, 244),
         (191, 211, 230),
         (158, 188, 218),
         (140, 150, 198),
         (140, 107, 177),
         (136, 65, 157),
         (110, 1, 107)]
bupu9 = [(247, 252, 253),
         (224, 236, 244),
         (191, 211, 230),
         (158, 188, 218),
         (140, 150, 198),
         (140, 107, 177),
         (136, 65, 157),
         (129, 15, 124),
         (77, 0, 75)]
rdpu3 = [(253, 224, 221),
         (250, 159, 181),
         (197, 27, 138)]
rdpu4 = [(254, 235, 226),
         (251, 180, 185),
         (247, 104, 161),
         (174, 1, 126)]
rdpu5 = [(254, 235, 226),
         (251, 180, 185),
         (247, 104, 161),
         (197, 27, 138),
         (122, 1, 119)]
rdpu6 = [(254, 235, 226),
         (252, 197, 192),
         (250, 159, 181),
         (247, 104, 161),
         (197, 27, 138),
         (122, 1, 119)]
rdpu7 = [(254, 235, 226),
         (252, 197, 192),
         (250, 159, 181),
         (247, 104, 161),
         (221, 52, 151),
         (174, 1, 126),
         (122, 1, 119)]
rdpu8 = [(255, 247, 243),
         (253, 224, 221),
         (252, 197, 192),
         (250, 159, 181),
         (247, 104, 161),
         (221, 52, 151),
         (174, 1, 126),
         (122, 1, 119)]
rdpu9 = [(255, 247, 243),
         (253, 224, 221),
         (252, 197, 192),
         (250, 159, 181),
         (247, 104, 161),
         (221, 52, 151),
         (174, 1, 126),
         (122, 1, 119),
         (73, 0, 106)]
purd3 = [(231, 225, 239),
         (201, 148, 199),
         (221, 28, 119)]
purd4 = [(241, 238, 246),
         (215, 181, 216),
         (223, 101, 176),
         (206, 18, 86)]
purd5 = [(241, 238, 246),
         (215, 181, 216),
         (223, 101, 176),
         (221, 28, 119),
         (152, 0, 67)]
purd6 = [(241, 238, 246),
         (212, 185, 218),
         (201, 148, 199),
         (223, 101, 176),
         (221, 28, 119),
         (152, 0, 67)]
purd7 = [(241, 238, 246),
         (212, 185, 218),
         (201, 148, 199),
         (223, 101, 176),
         (231, 41, 138),
         (206, 18, 86),
         (145, 0, 63)]
purd8 = [(247, 244, 249),
         (231, 225, 239),
         (212, 185, 218),
         (201, 148, 199),
         (223, 101, 176),
         (231, 41, 138),
         (206, 18, 86),
         (145, 0, 63)]
purd9 = [(247, 244, 249),
         (231, 225, 239),
         (212, 185, 218),
         (201, 148, 199),
         (223, 101, 176),
         (231, 41, 138),
         (206, 18, 86),
         (152, 0, 67),
         (103, 0, 31)]
orrd3 = [(254, 232, 200),
         (253, 187, 132),
         (227, 74, 51)]
orrd4 = [(254, 240, 217),
         (253, 204, 138),
         (252, 141, 89),
         (215, 48, 31)]
orrd5 = [(254, 240, 217),
         (253, 204, 138),
         (252, 141, 89),
         (227, 74, 51),
         (179, 0, 0)]
orrd6 = [(254, 240, 217),
         (253, 212, 158),
         (253, 187, 132),
         (252, 141, 89),
         (227, 74, 51),
         (179, 0, 0)]
orrd7 = [(254, 240, 217),
         (253, 212, 158),
         (253, 187, 132),
         (252, 141, 89),
         (239, 101, 72),
         (215, 48, 31),
         (153, 0, 0)]
orrd8 = [(255, 247, 236),
         (254, 232, 200),
         (253, 212, 158),
         (253, 187, 132),
         (252, 141, 89),
         (239, 101, 72),
         (215, 48, 31),
         (153, 0, 0)]
orrd9 = [(255, 247, 236),
         (254, 232, 200),
         (253, 212, 158),
         (253, 187, 132),
         (252, 141, 89),
         (239, 101, 72),
         (215, 48, 31),
         (179, 0, 0),
         (127, 0, 0)]
ylorrd3 = [(255, 237, 160),
           (254, 178, 76),
           (240, 59, 32)]
ylorrd4 = [(255, 255, 178),
           (254, 204, 92),
           (253, 141, 60),
           (227, 26, 28)]
ylorrd5 = [(255, 255, 178),
           (254, 204, 92),
           (253, 141, 60),
           (240, 59, 32),
           (189, 0, 38)]
ylorrd6 = [(255, 255, 178),
           (254, 217, 118),
           (254, 178, 76),
           (253, 141, 60),
           (240, 59, 32),
           (189, 0, 38)]
ylorrd7 = [(255, 255, 178),
           (254, 217, 118),
           (254, 178, 76),
           (253, 141, 60),
           (252, 78, 42),
           (227, 26, 28),
           (177, 0, 38)]
ylorrd8 = [(255, 255, 204),
           (255, 237, 160),
           (254, 217, 118),
           (254, 178, 76),
           (253, 141, 60),
           (252, 78, 42),
           (227, 26, 28),
           (177, 0, 38)]
ylorrd9 = [(255, 255, 204),
           (255, 237, 160),
           (254, 217, 118),
           (254, 178, 76),
           (253, 141, 60),
           (252, 78, 42),
           (227, 26, 28),
           (189, 0, 38),
           (128, 0, 38)]
ylorbr3 = [(255, 247, 188),
           (254, 196, 79),
           (217, 95, 14)]
ylorbr4 = [(255, 255, 212),
           (254, 217, 142),
           (254, 153, 41),
           (204, 76, 2)]
ylorbr5 = [(255, 255, 212),
           (254, 217, 142),
           (254, 153, 41),
           (217, 95, 14),
           (153, 52, 4)]
ylorbr6 = [(255, 255, 212),
           (254, 227, 145),
           (254, 196, 79),
           (254, 153, 41),
           (217, 95, 14),
           (153, 52, 4)]
ylorbr7 = [(255, 255, 212),
           (254, 227, 145),
           (254, 196, 79),
           (254, 153, 41),
           (236, 112, 20),
           (204, 76, 2),
           (140, 45, 4)]
ylorbr8 = [(255, 255, 229),
           (255, 247, 188),
           (254, 227, 145),
           (254, 196, 79),
           (254, 153, 41),
           (236, 112, 20),
           (204, 76, 2),
           (140, 45, 4)]
ylorbr9 = [(255, 255, 229),
           (255, 247, 188),
           (254, 227, 145),
           (254, 196, 79),
           (254, 153, 41),
           (236, 112, 20),
           (204, 76, 2),
           (153, 52, 4),
           (102, 37, 6)]
purples3 = [(239, 237, 245),
            (188, 189, 220),
            (117, 107, 177)]
purples4 = [(242, 240, 247),
            (203, 201, 226),
            (158, 154, 200),
            (106, 81, 163)]
purples5 = [(242, 240, 247),
            (203, 201, 226),
            (158, 154, 200),
            (117, 107, 177),
            (84, 39, 143)]
purples6 = [(242, 240, 247),
            (218, 218, 235),
            (188, 189, 220),
            (158, 154, 200),
            (117, 107, 177),
            (84, 39, 143)]
purples7 = [(242, 240, 247),
            (218, 218, 235),
            (188, 189, 220),
            (158, 154, 200),
            (128, 125, 186),
            (106, 81, 163),
            (74, 20, 134)]
purples8 = [(252, 251, 253),
            (239, 237, 245),
            (218, 218, 235),
            (188, 189, 220),
            (158, 154, 200),
            (128, 125, 186),
            (106, 81, 163),
            (74, 20, 134)]
purples9 = [(252, 251, 253),
            (239, 237, 245),
            (218, 218, 235),
            (188, 189, 220),
            (158, 154, 200),
            (128, 125, 186),
            (106, 81, 163),
            (84, 39, 143),
            (63, 0, 125)]
blues3 = [(222, 235, 247),
          (158, 202, 225),
          (49, 130, 189)]
blues4 = [(239, 243, 255),
          (189, 215, 231),
          (107, 174, 214),
          (33, 113, 181)]
blues5 = [(239, 243, 255),
          (189, 215, 231),
          (107, 174, 214),
          (49, 130, 189),
          (8, 81, 156)]
blues6 = [(239, 243, 255),
          (198, 219, 239),
          (158, 202, 225),
          (107, 174, 214),
          (49, 130, 189),
          (8, 81, 156)]
blues7 = [(239, 243, 255),
          (198, 219, 239),
          (158, 202, 225),
          (107, 174, 214),
          (66, 146, 198),
          (33, 113, 181),
          (8, 69, 148)]
blues8 = [(247, 251, 255),
          (222, 235, 247),
          (198, 219, 239),
          (158, 202, 225),
          (107, 174, 214),
          (66, 146, 198),
          (33, 113, 181),
          (8, 69, 148)]
blues9 = [(247, 251, 255),
          (222, 235, 247),
          (198, 219, 239),
          (158, 202, 225),
          (107, 174, 214),
          (66, 146, 198),
          (33, 113, 181),
          (8, 81, 156),
          (8, 48, 107)]
greens3 = [(229, 245, 224),
           (161, 217, 155),
           (49, 163, 84)]
greens4 = [(237, 248, 233),
           (186, 228, 179),
           (116, 196, 118),
           (35, 139, 69)]
greens5 = [(237, 248, 233),
           (186, 228, 179),
           (116, 196, 118),
           (49, 163, 84),
           (0, 109, 44)]
greens6 = [(237, 248, 233),
           (199, 233, 192),
           (161, 217, 155),
           (116, 196, 118),
           (49, 163, 84),
           (0, 109, 44)]
greens7 = [(237, 248, 233),
           (199, 233, 192),
           (161, 217, 155),
           (116, 196, 118),
           (65, 171, 93),
           (35, 139, 69),
           (0, 90, 50)]
greens8 = [(247, 252, 245),
           (229, 245, 224),
           (199, 233, 192),
           (161, 217, 155),
           (116, 196, 118),
           (65, 171, 93),
           (35, 139, 69),
           (0, 90, 50)]
greens9 = [(247, 252, 245),
           (229, 245, 224),
           (199, 233, 192),
           (161, 217, 155),
           (116, 196, 118),
           (65, 171, 93),
           (35, 139, 69),
           (0, 109, 44),
           (0, 68, 27)]
oranges3 = [(254, 230, 206),
            (253, 174, 107),
            (230, 85, 13)]
oranges4 = [(254, 237, 222),
            (253, 190, 133),
            (253, 141, 60),
            (217, 71, 1)]
oranges5 = [(254, 237, 222),
            (253, 190, 133),
            (253, 141, 60),
            (230, 85, 13),
            (166, 54, 3)]
oranges6 = [(254, 237, 222),
            (253, 208, 162),
            (253, 174, 107),
            (253, 141, 60),
            (230, 85, 13),
            (166, 54, 3)]
oranges7 = [(254, 237, 222),
            (253, 208, 162),
            (253, 174, 107),
            (253, 141, 60),
            (241, 105, 19),
            (217, 72, 1),
            (140, 45, 4)]
oranges8 = [(255, 245, 235),
            (254, 230, 206),
            (253, 208, 162),
            (253, 174, 107),
            (253, 141, 60),
            (241, 105, 19),
            (217, 72, 1),
            (140, 45, 4)]
oranges9 = [(255, 245, 235),
            (254, 230, 206),
            (253, 208, 162),
            (253, 174, 107),
            (253, 141, 60),
            (241, 105, 19),
            (217, 72, 1),
            (166, 54, 3),
            (127, 39, 4)]
reds3 = [(254, 224, 210),
         (252, 146, 114),
         (222, 45, 38)]
reds4 = [(254, 229, 217),
         (252, 174, 145),
         (251, 106, 74),
         (203, 24, 29)]
reds5 = [(254, 229, 217),
         (252, 174, 145),
         (251, 106, 74),
         (222, 45, 38),
         (165, 15, 21)]
reds6 = [(254, 229, 217),
         (252, 187, 161),
         (252, 146, 114),
         (251, 106, 74),
         (222, 45, 38),
         (165, 15, 21)]
reds7 = [(254, 229, 217),
         (252, 187, 161),
         (252, 146, 114),
         (251, 106, 74),
         (239, 59, 44),
         (203, 24, 29),
         (153, 0, 13)]
reds8 = [(255, 245, 240),
         (254, 224, 210),
         (252, 187, 161),
         (252, 146, 114),
         (251, 106, 74),
         (239, 59, 44),
         (203, 24, 29),
         (153, 0, 13)]
reds9 = [(255, 245, 240),
         (254, 224, 210),
         (252, 187, 161),
         (252, 146, 114),
         (251, 106, 74),
         (239, 59, 44),
         (203, 24, 29),
         (165, 15, 21),
         (103, 0, 13)]
greys3 = [(240, 240, 240),
          (189, 189, 189),
          (99, 99, 99)]
greys4 = [(247, 247, 247),
          (204, 204, 204),
          (150, 150, 150),
          (82, 82, 82)]
greys5 = [(247, 247, 247),
          (204, 204, 204),
          (150, 150, 150),
          (99, 99, 99),
          (37, 37, 37)]
greys6 = [(247, 247, 247),
          (217, 217, 217),
          (189, 189, 189),
          (150, 150, 150),
          (99, 99, 99),
          (37, 37, 37)]
greys7 = [(247, 247, 247),
          (217, 217, 217),
          (189, 189, 189),
          (150, 150, 150),
          (115, 115, 115),
          (82, 82, 82),
          (37, 37, 37)]
greys8 = [(255, 255, 255),
          (240, 240, 240),
          (217, 217, 217),
          (189, 189, 189),
          (150, 150, 150),
          (115, 115, 115),
          (82, 82, 82),
          (37, 37, 37)]
greys9 = [(255, 255, 255),
          (240, 240, 240),
          (217, 217, 217),
          (189, 189, 189),
          (150, 150, 150),
          (115, 115, 115),
          (82, 82, 82),
          (37, 37, 37),
          (0, 0, 0)]

# diverging color maps
puor3 = [(241, 163, 64),
         (247, 247, 247),
         (153, 142, 195)]
puor4 = [(230, 97, 1),
         (253, 184, 99),
         (178, 171, 210),
         (94, 60, 153)]
puor5 = [(230, 97, 1),
         (253, 184, 99),
         (247, 247, 247),
         (178, 171, 210),
         (94, 60, 153)]
puor6 = [(179, 88, 6),
         (241, 163, 64),
         (254, 224, 182),
         (216, 218, 235),
         (153, 142, 195),
         (84, 39, 136)]
puor7 = [(179, 88, 6),
         (241, 163, 64),
         (254, 224, 182),
         (247, 247, 247),
         (216, 218, 235),
         (153, 142, 195),
         (84, 39, 136)]
puor8 = [(179, 88, 6),
         (224, 130, 20),
         (253, 184, 99),
         (254, 224, 182),
         (216, 218, 235),
         (178, 171, 210),
         (128, 115, 172),
         (84, 39, 136)]
puor9 = [(179, 88, 6),
         (224, 130, 20),
         (253, 184, 99),
         (254, 224, 182),
         (247, 247, 247),
         (216, 218, 235),
         (178, 171, 210),
         (128, 115, 172),
         (84, 39, 136)]
puor10 = [(127, 59, 8),
          (179, 88, 6),
          (224, 130, 20),
          (253, 184, 99),
          (254, 224, 182),
          (216, 218, 235),
          (178, 171, 210),
          (128, 115, 172),
          (84, 39, 136),
          (45, 0, 75)]
puor11 = [(127, 59, 8),
          (179, 88, 6),
          (224, 130, 20),
          (253, 184, 99),
          (254, 224, 182),
          (247, 247, 247),
          (216, 218, 235),
          (178, 171, 210),
          (128, 115, 172),
          (84, 39, 136),
          (45, 0, 75)]
brbg3 = [(216, 179, 101),
         (245, 245, 245),
         (90, 180, 172)]
brbg4 = [(166, 97, 26),
         (223, 194, 125),
         (128, 205, 193),
         (1, 133, 113)]
brbg5 = [(166, 97, 26),
         (223, 194, 125),
         (245, 245, 245),
         (128, 205, 193),
         (1, 133, 113)]
brbg6 = [(140, 81, 10),
         (216, 179, 101),
         (246, 232, 195),
         (199, 234, 229),
         (90, 180, 172),
         (1, 102, 94)]
brbg7 = [(140, 81, 10),
         (216, 179, 101),
         (246, 232, 195),
         (245, 245, 245),
         (199, 234, 229),
         (90, 180, 172),
         (1, 102, 94)]
brbg8 = [(140, 81, 10),
         (191, 129, 45),
         (223, 194, 125),
         (246, 232, 195),
         (199, 234, 229),
         (128, 205, 193),
         (53, 151, 143),
         (1, 102, 94)]
brbg9 = [(140, 81, 10),
         (191, 129, 45),
         (223, 194, 125),
         (246, 232, 195),
         (245, 245, 245),
         (199, 234, 229),
         (128, 205, 193),
         (53, 151, 143),
         (1, 102, 94)]
brbg10 = [(84, 48, 5),
          (140, 81, 10),
          (191, 129, 45),
          (223, 194, 125),
          (246, 232, 195),
          (199, 234, 229),
          (128, 205, 193),
          (53, 151, 143),
          (1, 102, 94),
          (0, 60, 48)]
brbg11 = [(84, 48, 5),
          (140, 81, 10),
          (191, 129, 45),
          (223, 194, 125),
          (246, 232, 195),
          (245, 245, 245),
          (199, 234, 229),
          (128, 205, 193),
          (53, 151, 143),
          (1, 102, 94),
          (0, 60, 48)]
prgn3 = [(175, 141, 195),
         (247, 247, 247),
         (127, 191, 123)]
prgn4 = [(123, 50, 148),
         (194, 165, 207),
         (166, 219, 160),
         (0, 136, 55)]
prgn5 = [(123, 50, 148),
         (194, 165, 207),
         (247, 247, 247),
         (166, 219, 160),
         (0, 136, 55)]
prgn6 = [(118, 42, 131),
         (175, 141, 195),
         (231, 212, 232),
         (217, 240, 211),
         (127, 191, 123),
         (27, 120, 55)]
prgn7 = [(118, 42, 131),
         (175, 141, 195),
         (231, 212, 232),
         (247, 247, 247),
         (217, 240, 211),
         (127, 191, 123),
         (27, 120, 55)]
prgn8 = [(118, 42, 131),
         (153, 112, 171),
         (194, 165, 207),
         (231, 212, 232),
         (217, 240, 211),
         (166, 219, 160),
         (90, 174, 97),
         (27, 120, 55)]
prgn9 = [(118, 42, 131),
         (153, 112, 171),
         (194, 165, 207),
         (231, 212, 232),
         (247, 247, 247),
         (217, 240, 211),
         (166, 219, 160),
         (90, 174, 97),
         (27, 120, 55)]
prgn10 = [(64, 0, 75),
          (118, 42, 131),
          (153, 112, 171),
          (194, 165, 207),
          (231, 212, 232),
          (217, 240, 211),
          (166, 219, 160),
          (90, 174, 97),
          (27, 120, 55),
          (0, 68, 27)]
prgn11 = [(64, 0, 75),
          (118, 42, 131),
          (153, 112, 171),
          (194, 165, 207),
          (231, 212, 232),
          (247, 247, 247),
          (217, 240, 211),
          (166, 219, 160),
          (90, 174, 97),
          (27, 120, 55),
          (0, 68, 27)]
piyg3 = [(233, 163, 201),
         (247, 247, 247),
         (161, 215, 106)]
piyg4 = [(208, 28, 139),
         (241, 182, 218),
         (184, 225, 134),
         (77, 172, 38)]
piyg5 = [(208, 28, 139),
         (241, 182, 218),
         (247, 247, 247),
         (184, 225, 134),
         (77, 172, 38)]
piyg6 = [(197, 27, 125),
         (233, 163, 201),
         (253, 224, 239),
         (230, 245, 208),
         (161, 215, 106),
         (77, 146, 33)]
piyg7 = [(197, 27, 125),
         (233, 163, 201),
         (253, 224, 239),
         (247, 247, 247),
         (230, 245, 208),
         (161, 215, 106),
         (77, 146, 33)]
piyg8 = [(197, 27, 125),
         (222, 119, 174),
         (241, 182, 218),
         (253, 224, 239),
         (230, 245, 208),
         (184, 225, 134),
         (127, 188, 65),
         (77, 146, 33)]
piyg9 = [(197, 27, 125),
         (222, 119, 174),
         (241, 182, 218),
         (253, 224, 239),
         (247, 247, 247),
         (230, 245, 208),
         (184, 225, 134),
         (127, 188, 65),
         (77, 146, 33)]
piyg10 = [(142, 1, 82),
          (197, 27, 125),
          (222, 119, 174),
          (241, 182, 218),
          (253, 224, 239),
          (230, 245, 208),
          (184, 225, 134),
          (127, 188, 65),
          (77, 146, 33),
          (39, 100, 25)]
piyg11 = [(142, 1, 82),
          (197, 27, 125),
          (222, 119, 174),
          (241, 182, 218),
          (253, 224, 239),
          (247, 247, 247),
          (230, 245, 208),
          (184, 225, 134),
          (127, 188, 65),
          (77, 146, 33),
          (39, 100, 25)]
rdbu3 = [(239, 138, 98),
         (247, 247, 247),
         (103, 169, 207)]
rdbu4 = [(202, 0, 32),
         (244, 165, 130),
         (146, 197, 222),
         (5, 113, 176)]
rdbu5 = [(202, 0, 32),
         (244, 165, 130),
         (247, 247, 247),
         (146, 197, 222),
         (5, 113, 176)]
rdbu6 = [(178, 24, 43),
         (239, 138, 98),
         (253, 219, 199),
         (209, 229, 240),
         (103, 169, 207),
         (33, 102, 172)]
rdbu7 = [(178, 24, 43),
         (239, 138, 98),
         (253, 219, 199),
         (247, 247, 247),
         (209, 229, 240),
         (103, 169, 207),
         (33, 102, 172)]
rdbu8 = [(178, 24, 43),
         (214, 96, 77),
         (244, 165, 130),
         (253, 219, 199),
         (209, 229, 240),
         (146, 197, 222),
         (67, 147, 195),
         (33, 102, 172)]
rdbu9 = [(178, 24, 43),
         (214, 96, 77),
         (244, 165, 130),
         (253, 219, 199),
         (247, 247, 247),
         (209, 229, 240),
         (146, 197, 222),
         (67, 147, 195),
         (33, 102, 172)]
rdbu10 = [(103, 0, 31),
          (178, 24, 43),
          (214, 96, 77),
          (244, 165, 130),
          (253, 219, 199),
          (209, 229, 240),
          (146, 197, 222),
          (67, 147, 195),
          (33, 102, 172),
          (5, 48, 97)]
rdbu11 = [(103, 0, 31),
          (178, 24, 43),
          (214, 96, 77),
          (244, 165, 130),
          (253, 219, 199),
          (247, 247, 247),
          (209, 229, 240),
          (146, 197, 222),
          (67, 147, 195),
          (33, 102, 172),
          (5, 48, 97)]
rdgy3 = [(239, 138, 98),
         (255, 255, 255),
         (153, 153, 153)]
rdgy4 = [(202, 0, 32),
         (244, 165, 130),
         (186, 186, 186),
         (64, 64, 64)]
rdgy5 = [(202, 0, 32),
         (244, 165, 130),
         (255, 255, 255),
         (186, 186, 186),
         (64, 64, 64)]
rdgy6 = [(178, 24, 43),
         (239, 138, 98),
         (253, 219, 199),
         (224, 224, 224),
         (153, 153, 153),
         (77, 77, 77)]
rdgy7 = [(178, 24, 43),
         (239, 138, 98),
         (253, 219, 199),
         (255, 255, 255),
         (224, 224, 224),
         (153, 153, 153),
         (77, 77, 77)]
rdgy8 = [(178, 24, 43),
         (214, 96, 77),
         (244, 165, 130),
         (253, 219, 199),
         (224, 224, 224),
         (186, 186, 186),
         (135, 135, 135),
         (77, 77, 77)]
rdgy9 = [(178, 24, 43),
         (214, 96, 77),
         (244, 165, 130),
         (253, 219, 199),
         (255, 255, 255),
         (224, 224, 224),
         (186, 186, 186),
         (135, 135, 135),
         (77, 77, 77)]
rdgy10 = [(103, 0, 31),
          (178, 24, 43),
          (214, 96, 77),
          (244, 165, 130),
          (253, 219, 199),
          (224, 224, 224),
          (186, 186, 186),
          (135, 135, 135),
          (77, 77, 77),
          (26, 26, 26)]
rdgy11 = [(103, 0, 31),
          (178, 24, 43),
          (214, 96, 77),
          (244, 165, 130),
          (253, 219, 199),
          (255, 255, 255),
          (224, 224, 224),
          (186, 186, 186),
          (135, 135, 135),
          (77, 77, 77),
          (26, 26, 26)]
rdylbu3 = [(252, 141, 89),
           (255, 255, 191),
           (145, 191, 219)]
rdylbu4 = [(215, 25, 28),
           (253, 174, 97),
           (171, 217, 233),
           (44, 123, 182)]
rdylbu5 = [(215, 25, 28),
           (253, 174, 97),
           (255, 255, 191),
           (171, 217, 233),
           (44, 123, 182)]
rdylbu6 = [(215, 48, 39),
           (252, 141, 89),
           (254, 224, 144),
           (224, 243, 248),
           (145, 191, 219),
           (69, 117, 180)]
rdylbu7 = [(215, 48, 39),
           (252, 141, 89),
           (254, 224, 144),
           (255, 255, 191),
           (224, 243, 248),
           (145, 191, 219),
           (69, 117, 180)]
rdylbu8 = [(215, 48, 39),
           (244, 109, 67),
           (253, 174, 97),
           (254, 224, 144),
           (224, 243, 248),
           (171, 217, 233),
           (116, 173, 209),
           (69, 117, 180)]
rdylbu9 = [(215, 48, 39),
           (244, 109, 67),
           (253, 174, 97),
           (254, 224, 144),
           (255, 255, 191),
           (224, 243, 248),
           (171, 217, 233),
           (116, 173, 209),
           (69, 117, 180)]
rdylbu10 = [(165, 0, 38),
            (215, 48, 39),
            (244, 109, 67),
            (253, 174, 97),
            (254, 224, 144),
            (224, 243, 248),
            (171, 217, 233),
            (116, 173, 209),
            (69, 117, 180),
            (49, 54, 149)]
rdylbu11 = [(165, 0, 38),
            (215, 48, 39),
            (244, 109, 67),
            (253, 174, 97),
            (254, 224, 144),
            (255, 255, 191),
            (224, 243, 248),
            (171, 217, 233),
            (116, 173, 209),
            (69, 117, 180),
            (49, 54, 149)]
spectral3 = [(252, 141, 89),
             (255, 255, 191),
             (153, 213, 148)]
spectral4 = [(215, 25, 28),
             (253, 174, 97),
             (171, 221, 164),
             (43, 131, 186)]
spectral5 = [(215, 25, 28),
             (253, 174, 97),
             (255, 255, 191),
             (171, 221, 164),
             (43, 131, 186)]
spectral6 = [(213, 62, 79),
             (252, 141, 89),
             (254, 224, 139),
             (230, 245, 152),
             (153, 213, 148),
             (50, 136, 189)]
spectral7 = [(213, 62, 79),
             (252, 141, 89),
             (254, 224, 139),
             (255, 255, 191),
             (230, 245, 152),
             (153, 213, 148),
             (50, 136, 189)]
spectral8 = [(213, 62, 79),
             (244, 109, 67),
             (253, 174, 97),
             (254, 224, 139),
             (230, 245, 152),
             (171, 221, 164),
             (102, 194, 165),
             (50, 136, 189)]
spectral9 = [(213, 62, 79),
             (244, 109, 67),
             (253, 174, 97),
             (254, 224, 139),
             (255, 255, 191),
             (230, 245, 152),
             (171, 221, 164),
             (102, 194, 165),
             (50, 136, 189)]
spectral10 = [(158, 1, 66),
              (213, 62, 79),
              (244, 109, 67),
              (253, 174, 97),
              (254, 224, 139),
              (230, 245, 152),
              (171, 221, 164),
              (102, 194, 165),
              (50, 136, 189),
              (94, 79, 162)]
spectral11 = [(158, 1, 66),
              (213, 62, 79),
              (244, 109, 67),
              (253, 174, 97),
              (254, 224, 139),
              (255, 255, 191),
              (230, 245, 152),
              (171, 221, 164),
              (102, 194, 165),
              (50, 136, 189),
              (94, 79, 162)]
rdylgn3 = [(252, 141, 89),
           (255, 255, 191),
           (145, 207, 96)]
rdylgn4 = [(215, 25, 28),
           (253, 174, 97),
           (166, 217, 106),
           (26, 150, 65)]
rdylgn5 = [(215, 25, 28),
           (253, 174, 97),
           (255, 255, 191),
           (166, 217, 106),
           (26, 150, 65)]
rdylgn6 = [(215, 48, 39),
           (252, 141, 89),
           (254, 224, 139),
           (217, 239, 139),
           (145, 207, 96),
           (26, 152, 80)]
rdylgn7 = [(215, 48, 39),
           (252, 141, 89),
           (254, 224, 139),
           (255, 255, 191),
           (217, 239, 139),
           (145, 207, 96),
           (26, 152, 80)]
rdylgn8 = [(215, 48, 39),
           (244, 109, 67),
           (253, 174, 97),
           (254, 224, 139),
           (217, 239, 139),
           (166, 217, 106),
           (102, 189, 99),
           (26, 152, 80)]
rdylgn9 = [(215, 48, 39),
           (244, 109, 67),
           (253, 174, 97),
           (254, 224, 139),
           (255, 255, 191),
           (217, 239, 139),
           (166, 217, 106),
           (102, 189, 99),
           (26, 152, 80)]
rdylgn10 = [(165, 0, 38),
            (215, 48, 39),
            (244, 109, 67),
            (253, 174, 97),
            (254, 224, 139),
            (217, 239, 139),
            (166, 217, 106),
            (102, 189, 99),
            (26, 152, 80),
            (0, 104, 55)]
rdylgn11 = [(165, 0, 38),
            (215, 48, 39),
            (244, 109, 67),
            (253, 174, 97),
            (254, 224, 139),
            (255, 255, 191),
            (217, 239, 139),
            (166, 217, 106),
            (102, 189, 99),
            (26, 152, 80),
            (0, 104, 55)]

# qualitative color maps
set33 = [(141, 211, 199),
         (255, 255, 179),
         (190, 186, 218)]
set34 = [(141, 211, 199),
         (255, 255, 179),
         (190, 186, 218),
         (251, 128, 114)]
set35 = [(141, 211, 199),
         (255, 255, 179),
         (190, 186, 218),
         (251, 128, 114),
         (128, 177, 211)]
set36 = [(141, 211, 199),
         (255, 255, 179),
         (190, 186, 218),
         (251, 128, 114),
         (128, 177, 211),
         (253, 180, 98)]
set37 = [(141, 211, 199),
         (255, 255, 179),
         (190, 186, 218),
         (251, 128, 114),
         (128, 177, 211),
         (253, 180, 98),
         (179, 222, 105)]
set38 = [(141, 211, 199),
         (255, 255, 179),
         (190, 186, 218),
         (251, 128, 114),
         (128, 177, 211),
         (253, 180, 98),
         (179, 222, 105),
         (252, 205, 229)]
set39 = [(141, 211, 199),
         (255, 255, 179),
         (190, 186, 218),
         (251, 128, 114),
         (128, 177, 211),
         (253, 180, 98),
         (179, 222, 105),
         (252, 205, 229),
         (217, 217, 217)]
set310 = [(141, 211, 199),
          (255, 255, 179),
          (190, 186, 218),
          (251, 128, 114),
          (128, 177, 211),
          (253, 180, 98),
          (179, 222, 105),
          (252, 205, 229),
          (217, 217, 217),
          (188, 128, 189)]
set311 = [(141, 211, 199),
          (255, 255, 179),
          (190, 186, 218),
          (251, 128, 114),
          (128, 177, 211),
          (253, 180, 98),
          (179, 222, 105),
          (252, 205, 229),
          (217, 217, 217),
          (188, 128, 189),
          (204, 235, 197)]
set312 = [(141, 211, 199),
          (255, 255, 179),
          (190, 186, 218),
          (251, 128, 114),
          (128, 177, 211),
          (253, 180, 98),
          (179, 222, 105),
          (252, 205, 229),
          (217, 217, 217),
          (188, 128, 189),
          (204, 235, 197),
          (255, 237, 111)]
pastel13 = [(251, 180, 174),
            (179, 205, 227),
            (204, 235, 197)]
pastel14 = [(251, 180, 174),
            (179, 205, 227),
            (204, 235, 197),
            (222, 203, 228)]
pastel15 = [(251, 180, 174),
            (179, 205, 227),
            (204, 235, 197),
            (222, 203, 228),
            (254, 217, 166)]
pastel16 = [(251, 180, 174),
            (179, 205, 227),
            (204, 235, 197),
            (222, 203, 228),
            (254, 217, 166),
            (255, 255, 204)]
pastel17 = [(251, 180, 174),
            (179, 205, 227),
            (204, 235, 197),
            (222, 203, 228),
            (254, 217, 166),
            (255, 255, 204),
            (229, 216, 189)]
pastel18 = [(251, 180, 174),
            (179, 205, 227),
            (204, 235, 197),
            (222, 203, 228),
            (254, 217, 166),
            (255, 255, 204),
            (229, 216, 189),
            (253, 218, 236)]
pastel19 = [(251, 180, 174),
            (179, 205, 227),
            (204, 235, 197),
            (222, 203, 228),
            (254, 217, 166),
            (255, 255, 204),
            (229, 216, 189),
            (253, 218, 236),
            (242, 242, 242)]
set13 = [(228, 26, 28),
         (55, 126, 184),
         (77, 175, 74)]
set14 = [(228, 26, 28),
         (55, 126, 184),
         (77, 175, 74),
         (152, 78, 163)]
set15 = [(228, 26, 28),
         (55, 126, 184),
         (77, 175, 74),
         (152, 78, 163),
         (255, 127, 0)]
set16 = [(228, 26, 28),
         (55, 126, 184),
         (77, 175, 74),
         (152, 78, 163),
         (255, 127, 0),
         (255, 255, 51)]
set17 = [(228, 26, 28),
         (55, 126, 184),
         (77, 175, 74),
         (152, 78, 163),
         (255, 127, 0),
         (255, 255, 51),
         (166, 86, 40)]
set18 = [(228, 26, 28),
         (55, 126, 184),
         (77, 175, 74),
         (152, 78, 163),
         (255, 127, 0),
         (255, 255, 51),
         (166, 86, 40),
         (247, 129, 191)]
set19 = [(228, 26, 28),
         (55, 126, 184),
         (77, 175, 74),
         (152, 78, 163),
         (255, 127, 0),
         (255, 255, 51),
         (166, 86, 40),
         (247, 129, 191),
         (153, 153, 153)]
pastel23 = [(179, 226, 205),
            (253, 205, 172),
            (203, 213, 232)]
pastel24 = [(179, 226, 205),
            (253, 205, 172),
            (203, 213, 232),
            (244, 202, 228)]
pastel25 = [(179, 226, 205),
            (253, 205, 172),
            (203, 213, 232),
            (244, 202, 228),
            (230, 245, 201)]
pastel26 = [(179, 226, 205),
            (253, 205, 172),
            (203, 213, 232),
            (244, 202, 228),
            (230, 245, 201),
            (255, 242, 174)]
pastel27 = [(179, 226, 205),
            (253, 205, 172),
            (203, 213, 232),
            (244, 202, 228),
            (230, 245, 201),
            (255, 242, 174),
            (241, 226, 204)]
pastel28 = [(179, 226, 205),
            (253, 205, 172),
            (203, 213, 232),
            (244, 202, 228),
            (230, 245, 201),
            (255, 242, 174),
            (241, 226, 204),
            (204, 204, 204)]
set23 = [(102, 194, 165),
         (252, 141, 98),
         (141, 160, 203)]
set24 = [(102, 194, 165),
         (252, 141, 98),
         (141, 160, 203),
         (231, 138, 195)]
set25 = [(102, 194, 165),
         (252, 141, 98),
         (141, 160, 203),
         (231, 138, 195),
         (166, 216, 84)]
set26 = [(102, 194, 165),
         (252, 141, 98),
         (141, 160, 203),
         (231, 138, 195),
         (166, 216, 84),
         (255, 217, 47)]
set27 = [(102, 194, 165),
         (252, 141, 98),
         (141, 160, 203),
         (231, 138, 195),
         (166, 216, 84),
         (255, 217, 47),
         (229, 196, 148)]
set28 = [(102, 194, 165),
         (252, 141, 98),
         (141, 160, 203),
         (231, 138, 195),
         (166, 216, 84),
         (255, 217, 47),
         (229, 196, 148),
         (179, 179, 179)]
dark23 = [(27, 158, 119),
          (217, 95, 2),
          (117, 112, 179)]
dark24 = [(27, 158, 119),
          (217, 95, 2),
          (117, 112, 179),
          (231, 41, 138)]
dark25 = [(27, 158, 119),
          (217, 95, 2),
          (117, 112, 179),
          (231, 41, 138),
          (102, 166, 30)]
dark26 = [(27, 158, 119),
          (217, 95, 2),
          (117, 112, 179),
          (231, 41, 138),
          (102, 166, 30),
          (230, 171, 2)]
dark27 = [(27, 158, 119),
          (217, 95, 2),
          (117, 112, 179),
          (231, 41, 138),
          (102, 166, 30),
          (230, 171, 2),
          (166, 118, 29)]
dark28 = [(27, 158, 119),
          (217, 95, 2),
          (117, 112, 179),
          (231, 41, 138),
          (102, 166, 30),
          (230, 171, 2),
          (166, 118, 29),
          (102, 102, 102)]
paired3 = [(166, 206, 227),
           (31, 120, 180),
           (178, 223, 138)]
paired4 = [(166, 206, 227),
           (31, 120, 180),
           (178, 223, 138),
           (51, 160, 44)]
paired5 = [(166, 206, 227),
           (31, 120, 180),
           (178, 223, 138),
           (51, 160, 44),
           (251, 154, 153)]
paired6 = [(166, 206, 227),
           (31, 120, 180),
           (178, 223, 138),
           (51, 160, 44),
           (251, 154, 153),
           (227, 26, 28)]
paired7 = [(166, 206, 227),
           (31, 120, 180),
           (178, 223, 138),
           (51, 160, 44),
           (251, 154, 153),
           (227, 26, 28),
           (253, 191, 111)]
paired8 = [(166, 206, 227),
           (31, 120, 180),
           (178, 223, 138),
           (51, 160, 44),
           (251, 154, 153),
           (227, 26, 28),
           (253, 191, 111),
           (255, 127, 0)]
paired9 = [(166, 206, 227),
           (31, 120, 180),
           (178, 223, 138),
           (51, 160, 44),
           (251, 154, 153),
           (227, 26, 28),
           (253, 191, 111),
           (255, 127, 0),
           (202, 178, 214)]
paired10 = [(166, 206, 227),
            (31, 120, 180),
            (178, 223, 138),
            (51, 160, 44),
            (251, 154, 153),
            (227, 26, 28),
            (253, 191, 111),
            (255, 127, 0),
            (202, 178, 214),
            (106, 61, 154)]
paired11 = [(166, 206, 227),
            (31, 120, 180),
            (178, 223, 138),
            (51, 160, 44),
            (251, 154, 153),
            (227, 26, 28),
            (253, 191, 111),
            (255, 127, 0),
            (202, 178, 214),
            (106, 61, 154),
            (255, 255, 153)]
paired12 = [(166, 206, 227),
            (31, 120, 180),
            (178, 223, 138),
            (51, 160, 44),
            (251, 154, 153),
            (227, 26, 28),
            (253, 191, 111),
            (255, 127, 0),
            (202, 178, 214),
            (106, 61, 154),
            (255, 255, 153),
            (177, 89, 40)]
accent3 = [(127, 201, 127),
           (190, 174, 212),
           (253, 192, 134)]
accent4 = [(127, 201, 127),
           (190, 174, 212),
           (253, 192, 134),
           (255, 255, 153)]
accent5 = [(127, 201, 127),
           (190, 174, 212),
           (253, 192, 134),
           (255, 255, 153),
           (56, 108, 176)]
accent6 = [(127, 201, 127),
           (190, 174, 212),
           (253, 192, 134),
           (255, 255, 153),
           (56, 108, 176),
           (240, 2, 127)]
accent7 = [(127, 201, 127),
           (190, 174, 212),
           (253, 192, 134),
           (255, 255, 153),
           (56, 108, 176),
           (240, 2, 127),
           (191, 91, 23)]
accent8 = [(127, 201, 127),
           (190, 174, 212),
           (253, 192, 134),
           (255, 255, 153),
           (56, 108, 176),
           (240, 2, 127),
           (191, 91, 23),
           (102, 102, 102)]


sequential_maps = ['ylgn3','ylgn4','ylgn5','ylgn6','ylgn7','ylgn8','ylgn9','ylgnbu3','ylgnbu4',
                   'ylgnbu5','ylgnbu6','ylgnbu7','ylgnbu8','ylgnbu9','gnbu3','gnbu4','gnbu5',
                   'gnbu6','gnbu7','gnbu8','gnbu9','bugn3','bugn4','bugn5','bugn6','bugn7','bugn8',
                   'bugn9','pubugn3','pubugn4','pubugn5','pubugn6','pubugn7','pubugn8','pubugn9',
                   'pubu3','pubu4','pubu5','pubu6','pubu7','pubu8','pubu9','bupu3','bupu4','bupu5',
                   'bupu6','bupu7','bupu8','bupu9','rdpu3','rdpu4','rdpu5','rdpu6','rdpu7','rdpu8',
                   'rdpu9','purd3','purd4','purd5','purd6','purd7','purd8','purd9','orrd3','orrd4',
                   'orrd5','orrd6','orrd7','orrd8','orrd9','ylorrd3','ylorrd4','ylorrd5','ylorrd6',
                   'ylorrd7','ylorrd8','ylorrd9','ylorbr3','ylorbr4','ylorbr5','ylorbr6','ylorbr7',
                   'ylorbr8','ylorbr9','purples3','purples4','purples5','purples6','purples7','purples8',
                   'purples9','blues3','blues4','blues5','blues6','blues7','blues8','blues9','greens3',
                   'greens4','greens5','greens6','greens7','greens8','greens9','oranges3','oranges4',
                   'oranges5','oranges6','oranges7','oranges8','oranges9','reds3','reds4','reds5','reds6',
                   'reds7','reds8','reds9','greys3','greys4','greys5','greys6','greys7','greys8','greys9']

diverging_maps = ['puor3','puor4','puor5','puor6','puor7','puor8','puor9','puor10','puor11','brbg3',
                  'brbg4','brbg5','brbg6','brbg7','brbg8','brbg9','brbg10','brbg11','prgn3','prgn4',
                  'prgn5','prgn6','prgn7','prgn8','prgn9','prgn10','prgn11','piyg3','piyg4','piyg5',
                  'piyg6','piyg7','piyg8','piyg9','piyg10','piyg11','rdbu3','rdbu4','rdbu5','rdbu6',
                  'rdbu7','rdbu8','rdbu9','rdbu10','rdbu11','rdgy3','rdgy4','rdgy5','rdgy6','rdgy7',
                  'rdgy8','rdgy9','rdgy10','rdgy11','rdylbu3','rdylbu4','rdylbu5','rdylbu6','rdylbu7',
                  'rdylbu8','rdylbu9','rdylbu10','rdylbu11','spectral3','spectral4','spectral5',
                  'spectral6','spectral7','spectral8','spectral9','spectral10','spectral11',
                  'rdylgn3','rdylgn4','rdylgn5','rdylgn6','rdylgn7','rdylgn8','rdylgn9','rdylgn10',
                  'rdylgn11']

qualitative_maps = ['set33','set34','set35','set36','set37','set38','set39','set310','set311','set312',
                    'pastel13','pastel14','pastel15','pastel16','pastel17','pastel18','pastel19','set13',
                    'set14','set15','set16','set17','set18','set19','pastel23','pastel24','pastel25',
                    'pastel26','pastel27','pastel28','set23','set24','set25','set26','set27','set28',
                    'dark23','dark24','dark25','dark26','dark27','dark28','paired3','paired4','paired5',
                    'paired6','paired7','paired8','paired9','paired10','paired11','paired12','accent3',
                    'accent4','accent5','accent6','accent7','accent8']


def define_brewer(cname='all', reverse=False, grey=False, gray=False):
    import matplotlib.colors as col
    import matplotlib.cm as cm
    if cname.lower() == 'all':
        cmaps = sequential_maps + diverging_maps + qualitative_maps
    else:
        cmaps = [cname.lower()]
    for i in cmaps:
        exec('cpool = [ tuple([k/255. for k in j]) for j in '+i+' ]')
        if reverse:
            cpool = cpool[::-1]
        if grey | gray:
            for j in xrange(len(cpool)):
                isgray = 0.2125 * cpool[j][0] + 0.7154 * cpool[j][1] + 0.072* cpool[j][2]
                cpool[j] = (isgray,isgray,isgray)
        cmap = col.ListedColormap(cpool, i)
        cm.register_cmap(cmap=cmap)


def print_brewer(names='all'):
    """
        Examples
        --------
        >>> print_brewer('qualitative')
        ['set33', 'set34', 'set35', 'set36', 'set37', 'set38', 'set39', 'set310', 'set311', 'set312', 'pastel13', 'pastel14', 'pastel15', 'pastel16', 'pastel17', 'pastel18', 'pastel19', 'set13', 'set14', 'set15', 'set16', 'set17', 'set18', 'set19', 'pastel23', 'pastel24', 'pastel25', 'pastel26', 'pastel27', 'pastel28', 'set23', 'set24', 'set25', 'set26', 'set27', 'set28', 'dark23', 'dark24', 'dark25', 'dark26', 'dark27', 'dark28', 'paired3', 'paired4', 'paired5', 'paired6', 'paired7', 'paired8', 'paired9', 'paired10', 'paired11', 'paired12', 'accent3', 'accent4', 'accent5', 'accent6', 'accent7', 'accent8']
    """
    if names.lower() == 'sequential':
        print sequential_maps
    elif names.lower() == 'diverging':
        print diverging_maps
    elif names.lower() == 'qualitative':
        print qualitative_maps
    else:
        print 'Sequential color maps'
        print sequential_maps
        print ''
        print 'Diverging color maps'
        print diverging_maps
        print ''
        print 'Qualitative color maps'
        print qualitative_maps


def get_brewer(cname=None, names=False, rgb=False, rgb256=False, reverse=False, grey=False, gray=False):
    """
        Examples
        --------
        >>> from autostring import *
        >>> cc = get_brewer('Blues4',rgb=True)
        >>> print astr(np.array(cc[0]), 4)
        ['0.9373' '0.9529' '1.0000']

        >>> cc = get_brewer('Blues4',rgb256=True)
        >>> print cc[0]
        (239, 243, 255)

        >>> cc = get_brewer('Blues4',rgb256=True,reverse=True)
        >>> print cc[-1]
        (239, 243, 255)
        >>> print cc[0]
        (33, 113, 181)

        >>> cc = get_brewer('Blues4',rgb256=True,grey=True)
        >>> print astr(np.array(cc[0]), 4)
        ['242.9897' '242.9897' '242.9897']
    """
    if names:
        if names.lower() == 'sequential':
            return sequential_maps
        elif names.lower() == 'diverging':
            return diverging_maps
        elif names.lower() == 'qualitative':
            return qualitative_maps
        else:
            cmaps = sequential_maps + diverging_maps + qualitative_maps
            return cmaps
    else:
         if (cname.lower() in sequential_maps) | (cname.lower() in diverging_maps) | (cname.lower() in qualitative_maps):
             if rgb256:
                 exec('cpool = '+cname.lower())
                 if reverse:
                     cpool = cpool[::-1]
                 if grey | gray:
                     for j in xrange(len(cpool)):
                         isgray = 0.2125 * cpool[j][0] + 0.7154 * cpool[j][1] + 0.072* cpool[j][2]
                         cpool[j] = (isgray,isgray,isgray)
                 return cpool
             elif rgb:
                 exec('cpool = [ tuple([k/255. for k in j]) for j in '+cname.lower()+' ]')
                 if reverse:
                     cpool = cpool[::-1]
                 if grey | gray:
                     for j in xrange(len(cpool)):
                         isgray = 0.2125 * cpool[j][0] + 0.7154 * cpool[j][1] + 0.072* cpool[j][2]
                         cpool[j] = (isgray,isgray,isgray)
                 return cpool
             else:
                 import matplotlib.cm as cm
                 define_brewer(cname.lower(),reverse=reverse, grey=grey, gray=gray)
                 return cm.get_cmap(cname.lower())
         else:
             raise ValueError('Color map name not known: '+cname)


def plot_brewer(pdffile='brewer_colors.pdf',reverse=False, grey=False, gray=False):
    import numpy as np
    import ufz
    outtype = 'pdf'
    nrow       = 6           # # of rows of subplots per figure
    ncol       = 21          # # of columns of subplots per figure
    hspace     = 0.01        # x-space between subplots
    wspace     = 0.08        # y-space between subplots
    textsize   = 10          # standard text size
    lwidth     = 1.0         # axis line width
    alwidth    = 1.0         # axis line width
    import matplotlib as mpl
    mpl.use('PDF')
    import matplotlib.pyplot as plt
    from matplotlib.backends.backend_pdf import PdfPages
    mpl.rc('ps', papersize='a4', usedistiller='xpdf')
    mpl.rc('figure', figsize=(8.27,11.69)) # a4 portrait
    mpl.rc('font', size=textsize)
    mpl.rc('lines', linewidth=lwidth, color='black')
    mpl.rc('axes', linewidth=alwidth, labelcolor='black')
    mpl.rc('path', simplify=False) # do not remove
    print 'Plot PDF ', pdffile
    pdf_pages = PdfPages(pdffile)
    figsize = mpl.rcParams['figure.figsize']
    ifig = 0
    
    nmaps = len(sequential_maps)
    npage = nrow*ncol
    zaehl = 0
    for kk in sequential_maps:
        if zaehl % npage == 0:
            if zaehl != 0:
                 pdf_pages.savefig(fig)
                 plt.close()
            ifig += 1
            iplot = 0
            print 'Page ', ifig
            fig = plt.figure(ifig)
        iplot += 1
        sub = fig.add_axes(ufz.position(nrow,ncol,iplot,hspace=hspace,wspace=wspace))
        sub.axis('off')
        if iplot == 1:
            fig.text(0.5, 0.97, "Sequential", ha="center", size=12)
        cc = get_brewer(kk, reverse=reverse, grey=grey, gray=gray)
        plt.pcolormesh(np.outer(np.arange(cc.N),np.ones(cc.N)),cmap=cc)
        plt.setp(sub, title=kk)
        plt.setp(sub.title,fontsize=10, rotation=90, verticalalignment='bottom')
        zaehl += 1
    pdf_pages.savefig(fig)
    plt.close()

    nmaps = len(diverging_maps)
    npage = nrow*ncol
    zaehl = 0
    for kk in diverging_maps:
        if zaehl % npage == 0:
            if zaehl != 0:
                 pdf_pages.savefig(fig)
                 plt.close()
            ifig += 1
            iplot = 0
            print 'Page ', ifig
            fig = plt.figure(ifig)
        iplot += 1
        sub = fig.add_axes(ufz.position(nrow,ncol,iplot,hspace=hspace,wspace=wspace))
        sub.axis('off')
        if iplot == 1:
            fig.text(0.5, 0.97, "Diverging", ha="center", size=12)
        cc = get_brewer(kk,reverse=reverse, grey=grey, gray=gray)
        plt.pcolormesh(np.outer(np.arange(cc.N),np.ones(cc.N)),cmap=cc)
        plt.setp(sub, title=kk)
        plt.setp(sub.title,fontsize=10, rotation=90, verticalalignment='bottom')
        zaehl += 1
    pdf_pages.savefig(fig)
    plt.close()

    nmaps = len(qualitative_maps)
    npage = nrow*ncol
    zaehl = 0
    for kk in qualitative_maps:
        if zaehl % npage == 0:
            if zaehl != 0:
                 pdf_pages.savefig(fig)
                 plt.close()
            ifig += 1
            iplot = 0
            print 'Page ', ifig
            fig = plt.figure(ifig)
        iplot += 1
        sub = fig.add_axes(ufz.position(nrow,ncol,iplot,hspace=hspace,wspace=wspace))
        sub.axis('off')
        if iplot == 1:
            fig.text(0.5, 0.97, "Qualitative", ha="center", size=12)
        cc = get_brewer(kk,reverse=reverse, grey=grey, gray=gray)
        plt.pcolormesh(np.outer(np.arange(cc.N),np.ones(cc.N)),cmap=cc)
        # cc1 = get_brewer(kk,rgb=True,reverse=reverse, grey=grey, gray=gray)
        # mark1 = sub.plot(2, 2)
        # plt.setp(mark1, linestyle='None', marker='o', markeredgecolor=cc1[0], markerfacecolor=cc1[0])
        plt.setp(sub, title=kk)
        plt.setp(sub.title,fontsize=10, rotation=90, verticalalignment='bottom')
        zaehl += 1
    pdf_pages.savefig(fig)
    plt.close()

    pdf_pages.close()


if __name__ == '__main__':
    import doctest
    doctest.testmod()

    # from autostring import *
    # cc = get_brewer('Blues4',rgb=True)
    # print astr(np.array(cc[0]), 4)
    # #    ['0.9373' '0.9529' '1.0000']

    # cc = get_brewer('Blues4',rgb256=True)
    # print cc[0]
    # #    (239, 243, 255)

    # cc = get_brewer('Blues4',rgb256=True,reverse=True)
    # print cc[-1]
    # #    (239, 243, 255)
    # print cc[0]
    # #    (33, 113, 181)

    # cc = get_brewer('Blues4',rgb256=True,grey=True)
    # print astr(np.array(cc[0]), 4)
    # #    ['242.9897' '242.9897' '242.9897']

    # plot_brewer('test.pdf', reverse=True)
    # plot_brewer('test_gray.pdf', gray=True)
